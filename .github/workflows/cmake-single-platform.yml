# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
    paths-ignore:
        - '**.txt'
        - '**.md'
        - '**.gitignore'
        - '**.gitmodules'
        

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: eWaterCycle/setup-singularity@v7
      with:
        singularity-version: 3.8.3
    
    - name: Setup MPI
      uses: mpi4py/setup-mpi@v1
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      #working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: mpirun -n 2 build/test_multiplication -C ${{env.BUILD_TYPE}}
    - name: Clean-up
      run: rm -rf build
    - name: Contenairize
      run: singularity build --fakeroot container.sif singularity-definitions.def
    - name: sshpass setup
      run: sudo apt-get install sshpass
    - name: Transfer
      run:  sshpass -p "${{secrets.G100_PASS_SWENG}}"  scp -o "StrictHostKeyChecking=no" -o "UserKnownHostsFile=/dev/null"  ./container.sif ${{secrets.G100_USER_SWENG}}@login.g100.cineca.it:/g100/home/usertrain/${{secrets.G100_USER_SWENG}}/SWENG-Ces-Ton-Trab
    - name: Remote Run
      run: sshpass -p "${{secrets.G100_PASS_SWENG}}" ssh -o "StrictHostKeyChecking=no" -o "UserKnownHostsFile=/dev/null" ${{secrets.G100_USER_SWENG}}@login.g100.cineca.it 'sbatch SWENG-Ces-Ton-Trab/job.sh'
     

